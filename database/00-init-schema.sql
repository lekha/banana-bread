CREATE DATABASE cafe;

CREATE TABLE cafe.users (
    id INT(11) AUTO_INCREMENT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(100) NOT NULL,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    avatar VARCHAR(500) NOT NULL,
    tokens VARCHAR(500) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY (email)
);

CREATE TABLE cafe.bakers (
    id INT(11) AUTO_INCREMENT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    name VARCHAR(100),
    PRIMARY KEY (id)
);

CREATE TABLE cafe.foods (
    id INT(11) AUTO_INCREMENT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    baker_id INT(11) NOT NULL,
    image_url VARCHAR(500) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE cafe.selected_foods ( 
    id INT(11) AUTO_INCREMENT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id INT(11) NOT NULL,
    food_id INT(11) NOT NULL,
    is_selected INT(1) NOT NULL,
    PRIMARY KEY (id),
    KEY (user_id),
    UNIQUE KEY (user_id, food_id)
);

CREATE TABLE cafe.categories (
    id INT(11) AUTO_INCREMENT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    name VARCHAR(100) NOT NULL,
    superlative VARCHAR(100) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE KEY (name)
);

CREATE TABLE cafe.votes ( 
    id INT(11) AUTO_INCREMENT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id INT(11) NOT NULL,
    category_id INT(11) NOT NULL,
    winner_baker_id INT(11) NOT NULL,
    loser_baker_id INT(11) NOT NULL,
    PRIMARY KEY (id),
    KEY (user_id)
);
